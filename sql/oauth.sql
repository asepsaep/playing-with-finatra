-- MySQL Script generated by MySQL Workbench
-- Tue 19 Apr 2016 02:23:54 PM WIB
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `password` VARCHAR(300) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`, `username`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `mydb`.`account` (`id` ASC);

CREATE UNIQUE INDEX `username_UNIQUE` ON `mydb`.`account` (`username` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`oauth_client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`oauth_client` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NOT NULL,
  `grant_type` VARCHAR(45) NOT NULL,
  `client_id` VARCHAR(100) NOT NULL,
  `client_secret` VARCHAR(100) NOT NULL,
  `redirect_uri` VARCHAR(2000) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `oauth_client_owner`
    FOREIGN KEY (`owner_id`)
    REFERENCES `mydb`.`account` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `client_id_UNIQUE` ON `mydb`.`oauth_client` (`client_id` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `mydb`.`oauth_client` (`id` ASC);

CREATE INDEX `oauth_client_owner_idx` ON `mydb`.`oauth_client` (`owner_id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`oauth_authorization_code`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`oauth_authorization_code` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `oauth_client_id` INT NOT NULL,
  `code` VARCHAR(1000) NOT NULL,
  `redirect_uri` VARCHAR(2000) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `oauth_authorization_code_account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `mydb`.`account` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `oauth_authorization_code_oauth_client_id`
    FOREIGN KEY (`oauth_client_id`)
    REFERENCES `mydb`.`oauth_client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `mydb`.`oauth_authorization_code` (`id` ASC);

CREATE INDEX `oauth_authorization_code_account_id_idx` ON `mydb`.`oauth_authorization_code` (`account_id` ASC);

CREATE INDEX `oauth_authorization_code_oauth_client_id_idx` ON `mydb`.`oauth_authorization_code` (`oauth_client_id` ASC);


-- -----------------------------------------------------
-- Table `mydb`.`oauth_access_token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`oauth_access_token` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `oauth_client_id` INT NOT NULL,
  `access_token` VARCHAR(100) NOT NULL,
  `refresh_token` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `oauth_access_token_account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `mydb`.`account` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `oauth_access_token_oauth_client_id`
    FOREIGN KEY (`oauth_client_id`)
    REFERENCES `mydb`.`oauth_client` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `mydb`.`oauth_access_token` (`id` ASC);

CREATE INDEX `oauth_access_token_account_id_idx` ON `mydb`.`oauth_access_token` (`account_id` ASC);

CREATE INDEX `oauth_access_token_oauth_client_id_idx` ON `mydb`.`oauth_access_token` (`oauth_client_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`account`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`account` (`id`, `username`, `password`, `email`) VALUES (DEFAULT, 'asep', 'passasep', 'asep@email.com');
INSERT INTO `mydb`.`account` (`id`, `username`, `password`, `email`) VALUES (DEFAULT, 'danti', 'passdanti', 'danti@email.com');
INSERT INTO `mydb`.`account` (`id`, `username`, `password`, `email`) VALUES (DEFAULT, 'bcl', 'passbcl', 'bcl@email.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`oauth_client`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`oauth_client` (`id`, `owner_id`, `grant_type`, `client_id`, `client_secret`, `redirect_uri`) VALUES (DEFAULT, 1, 'password', 'asep_client_id', 'asep_client_secret', NULL);

COMMIT;

